(local {: autoload} (require :nfnl.module))
(local {: nmap : imap : vmap : executable?} (autoload :juice.util))
(local {: toggle-qf-window : toggle-loclist-window} (autoload :juice.quickfix))

(fn setup []
  (comment "---- GENERAL MAPPINGS ----")
  (nmap :Y :y$)
  (nmap :<C-l> ":nohl<cr>" [:noremap])
  (nmap "<leader>;" ":<C-r>\"" [:noremap])
  (nmap :<leader>w ":w<cr>" [:noremap])
  (nmap :<leader>n ":registers<cr>" [:noremap])
  (nmap :<F5> ":make<cr>" [:noremap])
  (comment "Vertically center screen when page scrolling up/down")
  (nmap :<C-d> :<C-d>zz [:noremap :silent])
  (nmap :<C-u> :<C-u>zz [:noremap :silent])
  (nmap :<C-o> :<C-o>zz [:noremap :silent])
  (nmap :<C-i> :<C-i>zz [:noremap :silent])
  (comment "Map omnifunc")
  (imap :<C-t> :<C-x><C-o> [:noremap :silent])
  (comment "easier moving of blocks in visual mode")
  (vmap "<" :<gv [:noremap])
  (vmap ">" :>gv [:noremap])
  (comment "add undo step when typing sentences")
  (imap "\"" "\"<C-g>u" [:noremap :silent])
  (imap "." :.<C-g>u [:noremap :silent])
  (imap "!" :!<C-g>u [:noremap :silent])
  (imap "?" :?<C-g>u [:noremap :silent])
  (imap "(" "(<C-g>u" [:noremap :silent])
  (imap ")" ")<C-g>u" [:noremap :silent])
  (imap "{" "{<C-g>u" [:noremap :silent])
  (imap "}" "}<C-g>u" [:noremap :silent])
  (imap "[" "[<C-g>u" [:noremap :silent])
  (imap "]" "]<C-g>u" [:noremap :silent])
  (comment "date shortcuts")
  (nmap :<leader>dt ":.!date '+\\%a, \\%d \\%b \\%Y'<cr>" [:noremap])
  (nmap :<leader>dT ":.!date '+\\%a, \\%d \\%b \\%Y' --date=" [])
  (comment "select completion binding item")
  (vim.cmd "inoremap <expr> <esc> pumvisible() ? '<C-y><esc>' : '<esc>'")
  (comment "---- MARK MANAGEMENT ----")
  (nmap :<leader>mm ":marks ARST<cr>" [:noremap])
  (nmap :<leader>mc ":delmarks ARST<cr>:echo 'Cleared file marks'<cr>"
        [:noremap])
  (nmap :<leader>a "`Azz" [:noremap])
  (nmap :<leader>r "`Rzz" [:noremap])
  (nmap :<leader>s "`Szz" [:noremap])
  (nmap :<leader>t "`Tzz" [:noremap])
  (nmap :<leader>ma "mA:echo 'Marked file A'<cr>" [:noremap])
  (nmap :<leader>mr "mR:echo 'Marked file R'<cr>" [:noremap])
  (nmap :<leader>ms "mS:echo 'Marked file S'<cr>" [:noremap])
  (nmap :<leader>mt "mT:echo 'Marked file T'<cr>" [:noremap])
  (comment "---- WINDOW MANAGEMENT ----")
  (nmap :<M-h> :<C-w>h [:noremap :silent])
  (nmap :<M-j> :<C-w>j [:noremap :silent])
  (nmap :<M-k> :<C-w>k [:noremap :silent])
  (nmap :<M-l> :<C-w>l [:noremap :silent])
  (nmap :<C-p> :<C-w>p [:noremap :silent])
  (comment "---- BUFFER MANAGEMENT ----")
  (nmap :<leader>b ":buffers<cr>:buffer<Space>" [:noremap])
  (nmap "[B" ":bfirst<cr>" [:noremap])
  (nmap "]B" ":blast<cr>" [:noremap])
  (nmap "[b" ":bprevious<cr>" [:noremap])
  (nmap "]b" ":bnext<cr>" [:noremap])
  (nmap :<leader>x ":bp|bdelete #<cr>" [:noremap])
  (comment "---- TAB MANAGEMENT ----")
  (nmap :tn ":tabnew<cr>" [:noremap])
  (nmap :tc ":tabclose<cr>" [:noremap])
  (nmap :ts ":tab split<cr>" [:noremap])
  (nmap "[t" ":tabprevious<cr>" [:noremap])
  (nmap "]t" ":tabnext<cr>" [:noremap])
  (nmap "[T" ":tabfirst<cr>" [:noremap])
  (nmap "]T" ":tablast<cr>" [:noremap])
  (comment "---- QUICKFIX LIST ----")
  (nmap :<leader>c toggle-qf-window [:noremap])
  (nmap "[c" ":cprevious<cr>" [:noremap])
  (nmap "]c" ":cnext<cr>" [:noremap])
  (nmap "[C" ":cfirst<cr>" [:noremap])
  (nmap "]C" ":clast<cr>" [:noremap])
  (comment "location list")
  (nmap :<leader>l toggle-loclist-window [:noremap])
  (nmap "[l" ":lprevious<cr>" [:noremap])
  (nmap "]l" ":lnext<cr>" [:noremap])
  (nmap "[L" ":lfirst<cr>" [:noremap])
  (nmap "]L" ":llast<cr>" [:noremap])
  (comment "---- SEARCH/REPLACE ----")
  (nmap :<leader>/s ":s//g<left><left>" [:noremap])
  (nmap :<leader>/S ":%s//g<left><left>" [:noremap])
  (nmap :<leader>/l ":.,+s//g<left><left><left><left>" [:noremap])
  (nmap :<leader>/w ":s/\\<<c-r><c-w>\\>//g<left><left>" [:noremap])
  (nmap :<leader>/W ":%s/\\<<c-r><c-w>\\>//g<left><left>" [:noremap])
  (comment "---- TMUX ----")
  (if vim.env.TMUX
      (do
        (let [tmux (autoload :juice.tmux)]
          (nmap :<M-h> tmux.navigate-left [:noremap :silent])
          (nmap :<M-l> tmux.navigate-right [:noremap :silent])
          (nmap :<M-k> tmux.navigate-up [:noremap :silent])
          (nmap :<M-j> tmux.navigate-down [:noremap :silent]))
        (when (executable? :lazygit)
          (nmap :<leader>og ":!tmux neww lazygit<cr><cr>" [:noremap :silent])))
      (do
        (nmap :<M-h> (lua-cmd "wincmd h") [:noremap :silent])
        (nmap :<M-l> (lua-cmd "wincmd l") [:noremap :silent])
        (nmap :<M-k> (lua-cmd "wincmd k") [:noremap :silent])
        (nmap :<M-j> (lua-cmd "wincmd j") [:noremap :silent])))
  (comment "---- JOURNAL ----")
  (when vim.env.JOURNAL
    (nmap :<leader>oj (fn [] (vim.cmd (.. ":$tabnew" :$JOURNAL/journal.adoc)))
          [:noremap :silent])
    (nmap :<leader>ov (fn [] (vim.cmd (.. ":$tabnew" :$JOURNAL/vim/vim.md)))
          [:noremap :silent]))
  (comment "---- PLUGINS ----")
  (nmap :<leader>L ":Lazy<cr>" [:noremap :silent])
  (nmap :<leader>e ":Oil<cr>" [:noremap :silent])
  (nmap :<leader>E ":Oil .<cr>" [:noremap :silent])
  (nmap :<leader>u ":UndotreeToggle<cr>" [:noremap :silent])
  (let [builtin (autoload :telescope.builtin)]
    (nmap :<leader>f builtin.find_files [:noremap :silent])
    (nmap :<leader>g builtin.git_files [:noremap :silent])
    (nmap :<leader>p builtin.oldfiles [:noremap :silent])
    (nmap :<leader>k builtin.keymaps [:noremap :silent]))
  (let [gitsigns (autoload :gitsigns)]
    (nmap "]h" (fn [] (gitsigns.nav_hunk :next)) [:noremap])
    (nmap "[h" (fn [] (gitsigns.nav_hunk :prev)) [:noremap])
    (nmap :<localleader>hS (fn [] (gitsigns.blame_line {:full true}))
          [:noremap])
    (nmap :<localleader>hp gitsigns.preview_hunk [:noremap])
    (nmap :<localleader>hs gitsigns.stage_hunk [:noremap])
    (nmap :<localleader>hS gitsigns.undo_stage_hunk [:noremap]))
  (imap "<C-]>" "<Plug>(copilot-next)")
  (imap "<C-[>" "<Plug>(copilot-prev)"))

{: setup}
